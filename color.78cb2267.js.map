{"version":3,"sources":["color.js"],"names":["Color","a","b","c","parseInt","getLightness","Math","trunc","random","str","replace","split"],"mappings":";AA0CK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1CgBA,IAAAA,EA0ChB,WAzCWC,SAAAA,EAAAA,EAAGC,EAAGC,GAAG,EAAA,KAAA,GACZF,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EAsCZ,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WApCU,MAAA,WACO,MAAA,OAAA,OAAA,KAAKF,EAAM,MAAA,OAAA,KAAKC,EAAM,MAAA,OAAA,KAAKC,EAAzC,OAmCH,CAAA,IAAA,UAjCS,MAAA,WAEC,OADFF,KAAAA,EAAI,KAAKC,EAAI,KAAKC,EAAI,EACpB,OA+BV,CAAA,IAAA,UA7BS,MAAA,WAEC,OADFF,KAAAA,EAAI,KAAKC,EAAI,KAAKC,EAAI,IACpB,OA2BV,CAAA,IAAA,eAzBc,MAAA,WACJ,OAAC,KAAKF,EAAI,KAAKC,EAAI,KAAKC,GAAK,IAwBvC,CAAA,IAAA,cAtBa,MAAA,WAEH,OADFF,KAAAA,EAAI,KAAKC,EAAI,KAAKC,EAAIC,SAAS,KAAKC,gBAClC,OAoBV,CAAA,IAAA,SAlBQ,MAAA,WAIE,OAHFJ,KAAAA,EAAI,IAAM,KAAKA,EACfC,KAAAA,EAAI,IAAM,KAAKA,EACfC,KAAAA,EAAI,IAAM,KAAKA,EACb,OAcV,CAAA,IAAA,SAZQ,MAAA,WAIE,OAHFF,KAAAA,EAAIK,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBN,KAAAA,EAAII,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBL,KAAAA,EAAIG,KAAKC,MAAsB,IAAhBD,KAAKE,UAClB,QAQV,CAAA,CAAA,IAAA,aANiBC,MAAAA,SAAAA,GAKP,OAJPA,EAAMA,EAAIC,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,IAAIC,MAAM,KAI9C,IAAIX,EAHHI,SAASK,EAAI,IACbL,SAASK,EAAI,IACbL,SAASK,EAAI,SAExB,EAAA,GAAA,QAAA,QAAA","file":"color.78cb2267.js","sourceRoot":"..","sourcesContent":["export default class Color {\r\n    constructor(a, b, c) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n    }\r\n    toString() {\r\n        return `rgb(${this.a}, ${this.b}, ${this.c})`;\r\n    }\r\n    toBlack() {\r\n        this.a = this.b = this.c = 0;\r\n        return this;\r\n    }\r\n    toWhite() {\r\n        this.a = this.b = this.c = 255;\r\n        return this;\r\n    }\r\n    getLightness() {\r\n        return (this.a + this.b + this.c) / 3;\r\n    }\r\n    toGrayscale() {\r\n        this.a = this.b = this.c = parseInt(this.getLightness());\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.a = 255 - this.a;\r\n        this.b = 255 - this.b;\r\n        this.c = 255 - this.c;\r\n        return this;\r\n    }\r\n    random() {\r\n        this.a = Math.trunc(Math.random() * 255);\r\n        this.b = Math.trunc(Math.random() * 255);\r\n        this.c = Math.trunc(Math.random() * 255);\r\n        return this;\r\n    }\r\n    static fromString(str) {\r\n        str = str.replace('rgb(', '').replace(')', '').split(',');\r\n        let a = parseInt(str[0]);\r\n        let b = parseInt(str[1]);\r\n        let c = parseInt(str[2]);\r\n        return new Color(a, b, c);\r\n    }\r\n}\r\n"]}